// client/styles/code/markdown.scss

@use 'sass:color';
@use 'mtrl/src/styles/abstract/theme' as t;
@use 'mtrl/src/styles/abstract/variables' as v;
@use 'mtrl/src/styles/abstract/functions' as f;

// Variables for consistent styling using the theme system
$primary-color: t.color('primary');
$text-color: t.color('on-surface');
$muted-color: t.color('on-surface-variant');
$border-color: t.color('outline-variant');
$border-color-light: t.color('outline-variant');
$code-bg: t.color('surface-container-highest'); // More distinct background for code blocks
$blockquote-border: t.color('outline');
$font-family-base: system-ui, -apple-system, sans-serif;
$font-family-code: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;
$border-radius: v.shape('medium');

.markdown-container {
  margin: 0 auto;
  padding: 0;
  line-height: 1.6;
  color: $text-color;
  font-family: $font-family-base;
  font-size: 1.2em;
  
  // Headings
  h1, h2, h3, h4, h5, h6 {
    margin-top: 0;
    font-weight: 600;
  }
  
  h1 {
    font-size: 2.5rem;
    margin-bottom: .5rem;
    border-bottom: 1px solid $border-color;
    padding-bottom: 0.5rem;
  }
  
  h2 {
    font-size: 2rem;
    margin: 2rem 0 1rem;
    padding-bottom: 0.3rem;
    border-bottom: 1px solid $border-color-light;
  }
  
  h3 {
    font-size: 1.5rem;
    margin: .5rem 0 0.25rem;
  }
  
  h4, h5, h6 {
    margin: 1.25rem 0 0.5rem;
  }
  
  // Paragraphs
  p {
    margin: 1rem 0;
  }
  
  // Blockquotes
  blockquote {
    border-left: 4px solid $blockquote-border;
    padding-left: 1rem;
    color: $muted-color;
    margin: 1rem 0;
    font-style: italic;
    
    p {
      margin-top: 0.5rem;
    }
  }
  
  // Code blocks with multiline support
  pre {
    background: $code-bg;
    padding: 1rem;
    border-radius: $border-radius;
    margin: 1rem 0;
    //  box-shadow: inset 0 1px 2px t.alpha('shadow', 0.1);
    
    // Keep horizontal scrolling available as an option
    overflow-x: auto;
    
    // Add maximum height with vertical scrolling for very large code blocks
    // max-height: 80vh;
    overflow-y: auto;
    
    code {
      background: transparent; // Keep transparent to let the pre background show
      padding: 0;
      display: block;
      color: inherit;
      font-size: 0.9em;
      font-family: $font-family-code;
      
      // Add these properties to enable multiline wrapping
      white-space: pre-wrap;       // CSS3 - allows wrapping but preserves other whitespace
      word-wrap: break-word;       // Allow long words to be broken
      word-break: break-word;      // Improved breaking for better readability
    }
  }
  
  // Inline code
  :not(pre) > code {
    background: $code-bg;
    padding: 0.2em 0.4em;
    border-radius: 3px;
    font-family: $font-family-code;
    font-size: 0.9em;
  }
  
  // Optional: Class for code that should never wrap (like tables or ASCII art)
  pre.no-wrap code {
    white-space: pre;
    word-wrap: normal;
    word-break: normal;
  }
  
  // Optional: Class for code blocks that should visually indicate wrapped lines
  pre.wrap-indicator code {
    position: relative;
    padding-left: 1.5em;
    
    // This requires some JavaScript to add the .wrapped-line class to wrapped lines
    .wrapped-line::before {
      content: "â†ª";
      position: absolute;
      left: 0.3em;
      color: $muted-color;
      opacity: 0.7;
    }
  }
  
  // Links
  a {
    color: $primary-color;
    text-decoration: none;
    transition: color 0.2s ease;
    
    &:hover {
      text-decoration: underline;
      // Use CSS filter to darken the color instead of SASS color adjustment
      filter: brightness(0.9);
    }
  }
  
  // Images
  img {
    max-width: 100%;
    height: auto;
    display: block;
    margin: 1rem 0;
    border-radius: $border-radius;
  }
  
  // Lists
  ul, ol {
    margin: 1rem 0;
    padding-left: 2rem;
    
    li {
      margin-bottom: 0.5rem;
    }
  }
  
  // Tables
  table {
    width: 100%;
    border-collapse: collapse;
    margin: .5rem 0 1.5rem;
    th, td {
      border: 1px solid $border-color;
      padding: 0.75rem;
      text-align: left;
    }
    
    th {
      background-color: t.color('surface-container-high');
      font-weight: 600;
    }
    
    tr:nth-child(even) {
      background-color: t.alpha('on-surface', 0.02);
    }
  }
  
  // Horizontal rule
  hr {
    height: 1px;
    background-color: $border-color;
    border: none;
    margin: 2rem 0;
  }
  
  // Code syntax highlighting - basic example
  .syntax-highlight {
    .keyword {
      color: t.color('primary');
    }
    
    .string {
      color: t.color('tertiary');
    }
    
    .comment {
      color: t.color('on-surface-variant');
    }
    
    .number {
      color: t.color('secondary');
    }
  }
}

// Dark Mode Support is automatically handled by the theme system
// The CSS variables will automatically switch to dark mode values when theme changes
// No need for additional media query since the theme system handles this

// Optional: Print styles for better document printing
@media print {
  .markdown-container {
    max-width: 100%;
    padding: 0;
    
    pre, code {
      background: #f9f9f9 !important;
      border: 1px solid #ddd !important;
    }
    
    a {
      color: #000 !important;
      text-decoration: underline !important;
    }
    
    img {
      max-width: 4in;
    }
  }
}